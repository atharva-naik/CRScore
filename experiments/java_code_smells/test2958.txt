/home/arnaik/code-review-test-projects/java/test2958/test2958.java:63:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:77:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:93:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:113:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:133:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:153:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:929:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:929:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:934:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:934:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1010:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1010:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1015:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1015:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1101:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1101:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1106:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1106:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1113:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1119:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1379:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1379:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1386:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1386:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1392:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1392:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1400:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1401:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1402:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1403:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1407:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1411:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1414:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1415:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1416:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1420:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1436:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1436:	GenericsNaming:	Generics names should be a one letter long and upper case.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1494:	UnusedPrivateMethod:	Avoid unused private methods such as 'createFromEntries(Iterable<Tuple2<K, V>>)'.
/home/arnaik/code-review-test-projects/java/test2958/test2958.java:1498:	UnusedPrivateMethod:	Avoid unused private methods such as 'emptyInstance()'.
