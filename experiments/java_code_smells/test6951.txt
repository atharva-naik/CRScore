/home/arnaik/code-review-test-projects/java/test6951/test6951.java:31:	UnnecessaryImport:	Unused static import 'edu.harvard.iq.dataverse.dataaccess.S3AccessIO.S3_IDENTIFIER_PREFIX'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:34:	UnnecessaryImport:	Unused static import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:38:	UnnecessaryImport:	Unused import 'java.awt.image.BufferedImage'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:80:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:81:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:82:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:83:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:84:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:85:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:86:	UnnecessaryImport:	Duplicate import 'edu.harvard.iq.dataverse.datasetutility.FileSizeChecker.bytesToHumanReadable'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:164:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:164:	UncommentedEmptyConstructor:	Document empty constructor
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:191:	UselessParentheses:	Useless parentheses.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:191:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:260:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:274:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:300:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:304:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:304:	UselessParentheses:	Useless parentheses.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:333:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:347:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:367:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:376:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:391:	CloseResource:	Ensure that resources like this FileInputStream object are closed after use
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:395:	CloseResource:	Ensure that resources like this InputStream object are closed after use
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:403:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:413:	LocalVariableNamingConventions:	The local variable name 'shp_handler' doesn't match '[a-z][a-zA-Z0-9]*'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:420:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:425:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:444:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:459:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:474:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:486:	CloseResource:	Ensure that resources like this FileReader object are closed after use
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:488:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.lang': 'Boolean' is already in scope because it is declared in java.lang
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:493:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:495:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:515:	MethodNamingConventions:	The static method name 'CalculateChecksum' doesn't match '[a-z][a-zA-Z0-9]*'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:528:	MethodNamingConventions:	The static method name 'CalculateChecksum' doesn't match '[a-z][a-zA-Z0-9]*'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:549:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:555:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:563:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:565:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:567:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:569:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:571:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:573:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:596:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:605:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:612:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:624:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:625:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:647:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:648:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:649:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:651:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:652:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:653:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:655:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:657:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:663:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:667:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:677:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:696:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:710:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:719:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:768:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'iaex' on all code paths
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:787:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:789:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:810:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:824:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:825:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:829:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:852:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:857:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:860:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:880:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:897:	UselessParentheses:	Useless parentheses.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:899:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:904:	CloseResource:	Ensure that resources like this FileInputStream object are closed after use
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:912:	LocalVariableNamingConventions:	The local variable name 'new_datafile' doesn't match '[a-z][a-zA-Z0-9]*'
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:916:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:922:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:929:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:935:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:937:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:944:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:964:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:979:	EmptyCatchBlock:	Avoid empty catch blocks
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1046:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1078:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1125:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1139:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1161:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1201:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'FileCitationExtension(String)': enum constructors are implicitly private
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1238:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1244:	LogicInversion:	Use opposite operator instead of the logic complement operator.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1244:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1276:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1282:	LogicInversion:	Use opposite operator instead of the logic complement operator.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1282:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1306:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1348:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1351:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1354:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1357:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1360:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1364:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1364:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1364:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1370:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1411:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1417:	UselessParentheses:	Useless parentheses.
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1419:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1421:	LiteralsFirstInComparisons:	Position literals first in String comparisons
/home/arnaik/code-review-test-projects/java/test6951/test6951.java:1454:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'defaultDatasetThumbnail'
